//Garrett Leckrone
//CS 161
//Project 2
import java.util.*;
import java.awt.*;

public abstract class Player {

	//Fields
	protected ArrayList<Card> hand = new ArrayList<Card>();	//The players hand
	protected Deck deck;
	
	//Constructor
	public Player(Deck deck){
		this.deck = deck;	
	}
	
	//Abstract Methods
	abstract boolean stand();
	abstract int valueOf();
	
	//Methods
	public void clearHand(){		//Clears players hand
		hand.clear();
	}
	
	public boolean bust(){			//Determines if the player busts
		int handSum = 0;
		
		if (hand.isEmpty()){ 		//If hand is empty, the player has not busted	
			return false;
		}
		for (int counter = 0; counter < hand.size(); counter++){  
			handSum += hand.get(counter).valueOf();	//Add all the values of the faces
		}
		if (handSum >= 21) return true;				//If the sum is 21 or over, the player busts
		else if (handSum <= 20) return false;		//If the sum is less than 21, the player does not bust
		else return false;							//Default return of False
	}
	
	public void hit(){		
		hand.add(deck.dealCard());
	}
	
	
	public void play(){
		while (bust() == false){   //If the player is not at a bust, then take a card.
			if (stand() == false){
			hit();}
			if (stand() == true){
				break;
			}
			
		}
		
	}
}
